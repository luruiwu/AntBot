#!/usr/bin/env python
#coding=utf-8

import rospy

from sensor_msgs.msg import Joy
from geometry_msgs.msg import Twist
from std_msgs.msg import Bool

class Teleop:
    def __init__(self):
        rospy.init_node('antbot_teleop')
		#速度刻度
        self.turn_scale = rospy.get_param('~turn_scale')
        self.drive_scale = rospy.get_param('~drive_scale')
        #降速比例
        self.slow_scale = rospy.get_param('~slow_scale',2.0)
        #急停按钮
        self.estop_button1 = rospy.get_param('~estop_button1', 4)
        self.estop_button2 = rospy.get_param('~estop_button2', 5)
		#朝向
        self.fwd_axis1 = rospy.get_param('~fwd_axis1', 3)#前后
        self.fwd_axis2 = rospy.get_param('~fwd_axis2', 0)#左右
		#转向
        self.turn_left_button = rospy.get_param('~turn_left_button', 6)
        self.turn_right_button = rospy.get_param('~turn_right_button', 7)
        #死人开关
        self.deadman_button = rospy.get_param('~deadman', 0)

        self.cmd = None
        self.cmd_pub = rospy.Publisher('cmd_vel', Twist, queue_size=1)

        rospy.Subscriber("joy", Joy, self.callback)
        rate = rospy.Rate(rospy.get_param('~hz', 20))
        
        rospy.on_shutdown(self.nodeShutdown)
        
        while not rospy.is_shutdown():
            rate.sleep()
            if self.cmd:
                self.cmd_pub.publish(self.cmd)

    def callback(self, data):
        """ Receive joystick data, formulate Twist message. """
        cmd = Twist()
        
        #如果摁下急停按钮
        if data.buttons[self.deadman_button] == 1:
            cmd.linear.x  = data.axes[self.fwd_axis1] * self.drive_scale / self.slow_scale
            cmd.linear.y  = data.axes[self.fwd_axis2] * self.drive_scale / self.slow_scale
            cmd.angular.z = (data.buttons[self.turn_left_button] + 
                            (-1) * data.buttons[self.turn_right_button] ) * self.turn_scale / self.slow_scale
            self.cmd = cmd	
        elif data.buttons[self.deadman_button] == 0:	
        	self.cmd = Twist()
        else:
            self.cmd = None
        #紧急停止
        if data.buttons[self.estop_button1] == 1 or data.buttons[self.estop_button1] == 1:
            cmd = Twist()
            self.cmd = cmd

    def nodeShutdown(self):
        self.cmd = Twist()
        self.cmd_pub.publish(self.cmd)

if __name__ == "__main__": 
    Teleop() 
